# on:
#   workflow_call:
#     inputs:
#       tf_action:
#         required: true
#         type: string  # "plan", "apply"
#       config_path:
#         required: true
#         type: string

# jobs:
#   job1-plan:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout github-actions-repo
#         uses: actions/checkout@v3
#         with:
#           repository: sasidaren-coder/github-actions-test
#           path: github-actions-test
#       - name: Checkout cc-client-config-repo
#         uses: actions/checkout@v3
#         with:
#           repository: sasidaren-coder/cc-client-config-repo
#           path: cc-client-config-repo
#       - name: Debug Working Directory
#         run: pwd && ls -al
#       - name: Custom rules
#         run: |
#           echo "Working Directory: $(pwd)"
#           chmod +x ./github-actions-test/scripts/validate-inputs.sh
#           ./github-actions-test/scripts/validate-inputs.sh ./cc-client-config-repo/${{ inputs.config_path }}
      
#       - name: Install Terraform CLI
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: 1.9.8 # Change to your preferred version

#       - name: Terraform Init
#         run: terraform init -backend-config=...
#       - name: Terraform Validate
#         run: terraform validate
#       - name: Terraform Plan
#         run: terraform plan -var-file=cc-client-config-repo/${{ inputs.config_path }}/terraform.tfvars


name: CI Plan Workflow

on:
  workflow_call:
    inputs:
      tf_action:
        required: true
        type: string  # "plan", "apply"
      config_path:
        required: true
        type: string

jobs:
  extract-env:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.setenv.outputs.env }}
    steps:
      - id: setenv
        run: |
          IFS='/' read -r client cloud env <<< "${{ inputs.config_path }}"
          echo "env=$env"
          echo "env=$env" >> $GITHUB_OUTPUT
  terraform-plan:
    needs: extract-env
    runs-on: ubuntu-latest
    environment:
      # name: ${{ needs.extract-env.outputs.environment }}
      name: ${{ needs.extract-env.outputs.environment }}
    steps:
      # This checks out the CALLER repo (cc-client-config-repo), which happens by default
      - name: Checkout cc-client-config-repo
        uses: actions/checkout@v3

      # This checks out the reusable IAC repo containing Terraform code and scripts
      - name: Checkout github-actions-test (iac-repo)
        uses: actions/checkout@v3
        with:
          repository: sasidaren-coder/github-actions-test
          path: iac

      # Run validation script from the iac repo
      - name: Validate inputs
        run: bash iac/scripts/validate-inputs.sh ${{ inputs.config_path }}/resources.yaml

      - name: Export Terraform Secrets for Environment
        run: |
          echo "TF_VAR_confluent_cloud_api_key=VQKCVKGQATPK7MWH" >> $GITHUB_ENV
          echo "TF_VAR_confluent_cloud_api_secret=pk81u2x+EqYxlR/OGf4fLr3WMc6Gf4QIUNxTr5qFukuobvTgsVlML/saMm3HpbI7" >> $GITHUB_ENV
          echo "TF_VAR_kafka_cluster_id=lkc-1mwkj6" >> $GITHUB_ENV
          echo "TF_VAR_cc_environment_id=env-g96n51" >> $GITHUB_ENV
          echo "TF_VAR_kafka_rest_endpoint=https://pkc-lgk0v.us-west1.gcp.confluent.cloud:443" >> $GITHUB_ENV
          echo "TF_VAR_kafka_api_key=4CN4GOQOFUB3IEAF" >> $GITHUB_ENV
          echo "TF_VAR_kafka_api_secret=hV88QHt1hN+wCHHJA4jOIIAs+fz/9TJNY9T3nhmkfIgyW2ODOPJONJoKss63VP/b" >> $GITHUB_ENV
          echo "TF_VAR_resource_yaml_path=../../${{ inputs.config_path }}/resources.yaml" >> $GITHUB_ENV
          env

      - name: Print Terraform secrets (safe)
        run: |
          echo "kafka_cluster_id=${{ secrets.TF_KAFKA_CLUSTER_ID }}"
          echo "cc_environment_id=${{ secrets.TF_CC_ENVIRONMENT_ID }}"

      - name: Show TF_VAR envs
        run: env | grep TF_VAR_

      - name: Install Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8 # Change to your preferred version

      # Terraform Init, Validate, Plan from the module in iac repo
      - name: Terraform Init
        working-directory: iac/confluentcloud-resource-provisioner-tf
        run: terraform init

      - name: Terraform Validate
        working-directory: iac/confluentcloud-resource-provisioner-tf
        run: terraform validate

      - name: Terraform Plan
        working-directory: iac/confluentcloud-resource-provisioner-tf
        run: |
          echo "Working Directory: $(pwd)"
          echo "Listing Files: $(ls -ltr ../..)"
          terraform plan
